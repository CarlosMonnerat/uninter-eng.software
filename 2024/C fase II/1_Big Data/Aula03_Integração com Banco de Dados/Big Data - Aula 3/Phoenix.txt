What is Phoenix?
 - A SQL driver for HBase that supports transactions
 - Fast, low-latency - OLTP support
 - Originally developed by Salesforce, then open-sourced
 - Exposes a JDBC connector for HBase
 - Supports secondary indices and user-defined functions
 - Integrates with MapReduce, Spark, Hive, Pig, Flume through integration jar files
 - Operates alongside with HBase

Why Phoenix?
 - It's really fast. You probably won't pay a performance cost from having this extra layer on top of HBase
 - Why Phoenix and not Drill?
   - Well, choose the right tool for the job.
 - Why Phoenix and not HBase's native clients?
   - Your apps, and analysis, may find DQL easier to work with.
   - Phoenix can do the work of optimizing more complex queries for you
     - But remember HBase is still fundamentally non-relational!

Using Phoenix
 - Command-Line Interface (CLI)
 - Phoenix API for Java
 - JDBC Driver (thick client)
 - Phoenix Query Server (PQS) (thin client)
   - INtended  to eventually enable non-JVM acess
 - JAR's for MapReduce, Hive, Pig, Flume, Spark

Iniciar o HBase no Ambari

Instalando Phoenix:
 - yum install phoenix
 - And it's done!

Iniciando o Phoenix:
 - cd /usr/hdp/current/phoenix-client/bin
 - python sqlline.py

Rodando Comandos:
!tables
# Lista as tabelas do HBase

CREATE TABLE IF NOT EXISTS br_population( estado CHAR(2) NOT NULL,
                                          cidade VARCHAR NOT NULL,
                                          populacao BIGINT
                                          CONSTRAINT my_pk PRIMARY_KEY (state,city);

UPSERT INTO BR_POPULATION VALUES ('SP', 'Sao Paulo', 12252023);
UPSERT INTO BR_POPULATION VALUES ('RJ', 'Rio de Janreiro', 6718903);
UPSERT INTO BR_POPULATION VALUES ('PR', 'Curitiba', 1933105);

SELECT * FROM BR_POPULATION WHERE ESTADO='SP';

DROP TABLE BR_POPULATION

!quit

Exemplo de integração com o Pig:
 - Crie a tabela users no Phoenix:
CREATE TABLE users ( USERID INTEGER NOT NULL, AGE INTEGER, GENDER CHAR(1), OCCUPATION VARCHAR, ZIP VARCHAR CONTRAINT pk PRIMARY KEY(USERID) );

